.data
tmp:
  .word 1 # 0x1
  .word 2 # 0x2
  .word 3 # 0x3
  .word 4 # 0x4
  .word 5 # 0x5
  .word 6 # 0x6
  .word 7 # 0x7
  .word 8 # 0x8
  .word 9 # 0x9
  .word 10 # 0xa
  .zero 40

tmpp:
  .zero 80

.text
.global main
main: # @main
  addi sp, sp, -32    # encoding: [0x13,0x01,0x01,0xfe] [0x13, 0x1, 0x1, 0xfe]
  sd ra, 24(sp)       # encoding: [0x23,0x3c,0x11,0x00] [0x23, 0x3c, 0x11, 0x0]
  sd fp,16(sp)        # encoding: [0x23,0x38,0x81,0x00] [0x23, 0x38, 0x81, 0x0]
  addi fp, sp, 32     # encoding: [0x13,0x04,0x01,0x02] [0x13, 0x4, 0x1, 0x2]
  sd a1, 8(sp)        # encoding: [0x23,0x34,0xb1,0x00] [0x23, 0x34, 0xb1, 0x0]
  sd a0, 0(sp)        # encoding: [0x23,0x30,0xa1,0x00] [0x23, 0x30, 0xa1, 0x0]

  # T0 = CallContext->stack_size
  ld t0, 192(a1)      # encoding: [0x83,0xb2,0x05,0x0c] [0x83, 0xb2, 0x5, 0xc]
  # SP = SP - T0
  sub sp, sp, t0      # encoding: [0x33,0x01,0x51,0x40] [0x33, 0x1, 0x51, 0x40]
  # copy stack from the CallContext,T0 = index, T1 = dest, T2 = source
  addi t1, sp, 0      # encoding: [0x13,0x03,0x01,0x00] [0x13, 0x3, 0x1, 0x0]
# .Lpcrel_hi1:
#   auipc t1, %pcrel_hi(tmpp)
#   addi t1, t1, %pcrel_lo(.Lpcrel_hi1)
  # t2 = CallContext->stack
  ld t2, 200(a1)      # encoding: [0x83,0xb3,0x85,0x0c] [0x83, 0xb3, 0x85, 0xc]
# .Lpcrel_hi2:
#   auipc t2, %pcrel_hi(tmp)
#   addi t2, t2, %pcrel_lo(.Lpcrel_hi2)
start_copy:
  beq t0, zero, exit_copy   # encoding: [0x63'A',0x80'A',0x02'A',A] [0x63, 0x8c, 0x2, 0x0] [0x63, 0x8c, 0x2, 0x0]
  ld t3, 0(t2)        # encoding: [0x03,0xbe,0x03,0x00] [0x3, 0xbe, 0x3, 0x0]
  sd t3, 0(t1)        # encoding: [0x23,0x30,0xc3,0x01] [0x23, 0x30, 0xc3, 0x1]
  addi t1, t1, 8      # encoding: [0x13,0x03,0x83,0x00] [0x13, 0x3, 0x83, 0x0]
  addi t2, t2, 8      # encoding: [0x93,0x83,0x83,0x00] [0x93, 0x83, 0x83, 0x0]
  addi t0, t0, -8     # encoding: [0x93,0x82,0x82,0xff] [0x93, 0x82, 0x82, 0xff]
  jal x0, start_copy  # encoding: [0x6f,0bAAAA0000,A,A] [0x6f, 0xf0, 0x9f, 0xfe]
exit_copy:
  
  addi t0, a1, 0      # encoding: [0x93,0x82,0x05,0x00]

  # /* set all general purpose registers from CallContext */
  ld a0, 80(t0)       # encoding: [0x03,0xb5,0x02,0x05]
  ld a1, 88(t0)       # encoding: [0x83,0xb5,0x82,0x05]
  ld a2, 96(t0)       # encoding: [0x83,0xb6,0x02,0x06]
  ld a3, 104(t0)      # encoding: [0x83,0xb6,0x82,0x06]
  ld a4, 112(t0)      # encoding: [0x83,0xb7,0x02,0x07]
  ld a5, 120(t0)      # encoding: [0x83,0xb7,0x82,0x07]
  ld a6, 128(t0)      # encoding: [0x03,0xb8,0x02,0x08]
  ld a7, 136(t0)      # encoding: [0x83,0xb8,0x82,0x08]

  # /* set all floating registers to CallContext  */
  fld fa0, 336(t0)    # encoding: [0x07,0xb5,0x02,0x15]
  fld fa1, 344(t0)    # encoding: [0x87,0xb5,0x82,0x15]
  fld fa2, 352(t0)    # encoding: [0x07,0xb6,0x02,0x16]
  fld fa3, 360(t0)    # encoding: [0x87,0xb6,0x82,0x16]
  fld fa4, 368(t0)    # encoding: [0x07,0xb7,0x02,0x17]
  fld fa5, 376(t0)    # encoding: [0x87,0xb7,0x82,0x17]
  fld fa6, 384(t0)    # encoding: [0x07,0xb8,0x02,0x18]
  fld fa7, 392(t0)    # encoding: [0x87,0xb8,0x82,0x18]

  addi sp, fp, 0      # encoding: [0x13,0x01,0x04,0x00]
  ld a0, -32(sp)      # encoding: [0x03,0x35,0x01,0xfe]
  ld a1, -24(sp)      # encoding: [0x83,0x35,0x81,0xfe]
  ld fp, -16(sp)      # encoding: [0x03,0x34,0x01,0xff]
  ld ra, -8(sp)       # encoding: [0x83,0x30,0x81,0xff]
  ret                 # encoding: [0x67,0x80,0x00,0x00]


  